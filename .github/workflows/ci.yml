name: Cargo Build & Test

on:
  pull_request:

env: 
  CARGO_TERM_COLOR: always

jobs:
  build_and_test:
    name: Rust project - latest
    strategy:
      max-parallel: 1
      fail-fast: true
      matrix:
        include:
          - os: ubuntu-latest
          - os: windows-latest
          # Universal macOS binary is supported as universal-apple-darwin.
          - os: macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Toolchain install & update
        run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}
      - name: Build GUI
        run: cargo build --bin infuse_decoder --verbose
      - name: Build CLI
        run: cargo build --bin infuse_decoder_cli --verbose
      - name: Run CLI
        run: cargo run --bin infuse_decoder_cli -- --path ./data/tdf_test_blocks.bin --output . --name ci_test --verbose
      - name: Display and cleanup results
        shell: bash
        run: |
          ls -la *.csv
          rm ./*.csv
